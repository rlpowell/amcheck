{
  imapserver: "localhost",
  login: "weeble",
  // Note that "pass" is the literal password that dovecot expects in testing
  // mode; it doesn't care about the login name
  password: "pass",
  handlers: [
    // Very artificial
    {
      name: "Artificial BodyCheckAny",
      filters: [],
      checker_tree: {
        BodyCheckAny: {
          strings: [ "Error", "damaged", "moo" ],
          matched: { Action: "Alert" },
          not_matched: "Empty",
        }
      }
    },
    // Very artificial
    {
      name: "Artificial BodyCheckAll",
      filters: [],
      checker_tree: {
        BodyCheckAll: {
          strings: [ "catalog", "moo", "cow" ],
          matched: { Action: "Alert" },
          not_matched: "Empty",
        }
      }
    },
    // Very artificial
    {
      name: "Artificial BodyCheckRegex",
      filters: [
        { Match: { From: " <root@" } },
        { Match: { Subject: "^Cron " } },
        { Match: { Subject: "puppet agent" } },
      ],
      checker_tree: {
        BodyCheckRegex: {
          regex: "Server Error.*node",
          matched: { Action: "Alert" },
          not_matched: "Empty",
        }
      }
    },
    {
      name: "Puppet Runs OK And At Least Once In The Past Day",
      filters: [
        { Match: { From: " <root@" } },
        { Match: { Subject: "^Cron " } },
        { Match: { Subject: "puppet agent" } },
      ],
      checker_tree: {
        BodyCheckAll: {
          strings: ["Notice: Applied catalog in"],
          matched: {
            DateCheck: {
              days: 1,
              older_than: {
                Action: "Delete"
              },
              younger_than: {
                CountCheck: {
                  count: 1,
                  greater_than: { Action: "Success" },
                  equal: { Action: "Success" },
                  less_than: { Action: "Alert" },
                },
              },
            },
          },
          not_matched: { Action: "Alert" },
        },
      },
    },
    // This is not really a check that makes sense; it's just there to test a
    // problem we had where deleting mails based on sequence number caused the
    // next set of deletions to fail because the sequence numbers no longer
    // matched.
    {
      name: "delete rsync_backup_wrapper mail",
      filters: [
        { Match: { Subject: "^Cron .*rsync_backup_wrapper" } },
      ],
      checker_tree: {
        MatchCheck: {
          matchers: [],
          matched: { Action: "Delete" },
          not_matched: { Action: "Alert" },
        }
      }
    },
  ]
}
