Change BodyCheck to BodyAnyCheck, BodyAllCheck, and BodyRegexCheck.
WRT that last: doing the body pulls in a small-ish batch, which is what
*should* be happening in the check tree, should not be *terribly*
slow, but add debug statements to the beginning and end of that
check so we can watch the timing.

Build a check for warnings/errors/etc using BodyAnyCheck; see how it
goes.

Set any mails that fail a check / cause an alert to Flagged and push
them back to the inbox.  Alter the rest of the code to ignore
Flagged messages (just add UNFLAGGED to search probably).

Put the `amcheck_storage` name into the settings.  And maybe INBOX
too.

Add to README:
- the notes from configuration.rs
- Special case: empty matcher matches all mails in the check phase, but is ignored in the move phase.
- Body checks only work on literal strings
- make it clear that you'll need to massage your scripts to what it
  is possible for amcheck to do, because complex body text searches
  are extremely slow
- note that it would be possible to do body searches in the filters
  if anyone actually has a use case for that

https://www.youtube.com/watch?v=jpVzSse7oJ4 covers why you want thiserror well; good overview of Rust error handling
