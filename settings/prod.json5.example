// This is some examples from when I wrote json5 directly.  Once I
// found that I had *many* rules that looked the same as the first
// one in this example file, I moved to writing pkl (
// https://pkl-lang.org/main/current/pkl-cli/index.html#installation )
// and using that to generate json, but amcheck still loads it as json5
// so you can manually write files that aren't as aggravating as
// JSON or as error-prone as YAML.
{
  imapserver: "localhost",
  login: "weeble",
  password: "password",
  // Optional, defaults to "INBOX"
  inbox_name: "ninbox",
  // Optional, defaults to "amcheck_storage"
  storage_folder_name: "borage",
  // Optional, defaults to 60
  days_back: 14,
  // Optional; turn it on if you want things in gmail to actually
  // get deleted and not just archived
  gmail_delete_hack: true,
  handlers: [
    {
      name: "Puppet Runs OK And At Least Once In The Past Day",
      filters: [
        { Match: { From: " <root@" } },
        { Match: { Subject: "^Cron " } },
        { Match: { Subject: "puppet agent" } },
      ],
      checker_tree: {
        BodyCheckAll: {
          string: [ "Notice: Applied catalog in" ],
          empty_ok = "NotMatched",
          matched: {
            DateCheck: {
              days: 1,
              empty_ok = "YoungerThan",
              older_than: {
                Action: "Delete"
              },
              younger_than: {
                CountCheck: {
                  count: 1,
                  greater_than: { Action: "Success" },
                  equal: { Action: "Success" },
                  less_than: { Action: "Alert" },
                },
              },
            },
          },
          not_matched: { Action: "Alert" },
        },
      },
    },
    // We really don't need to evaluate these for correctness; if
    // they're not sending then no-snitch would alert us
    {
      name: "clean out no-snitch mails",
      filters: [
        { Match: { Subject: "swaks.*@nosnch.in" } },
      ],
      checker_tree: {
        DateCheck: {
          days: 0,
          older_than: {
            Action: "Delete"
          },
          younger_than: {
            Action: "Alert"
          },
        },
      },
    },
    {
      name: "Alert On Unhandled Mails",
      // Special case: empty matcher matches all mails in the check
      // phase, but is ignored in the move phase.
      filters: [],
      checker_tree: {
        DateCheck: {
          days: 3,
          older_than: {
            Action: "Alert"
          },
          younger_than: {
            Action: "Nothing"
          },
        },
      },
    },
  ]
}
